import pandas as pd
import os
import sys

p = os.path.dirname(os.path.dirname(os.getcwd()))+'/scripts/'
sys.path.append(p)

from sm_utils import *
from utils import *
# from vcf_utils import *

c_dir = '../common/'

meta_file = 'config.tsv'
configfile: '../config.yml'

include: f'{c_dir}download.smk'
include: f'{c_dir}samtools.smk'
include: f'{c_dir}winnowmap.smk'
include: f'{c_dir}bigwig.smk'
include: f'{c_dir}variant_calling.smk'
include: f'{c_dir}formatting.smk'
include: f'{c_dir}phasing.smk'
include: f'{c_dir}cerberus.smk'
include: f'{c_dir}bedtools.smk'
include: f'{c_dir}transdecoder.smk'
include: f'{c_dir}protein.smk'



rule all:
    input:
        config['lr']['orfanage']['cds_filt']

rule rm_sirv_ercc_gtf:
    input:
        gtf = config['lr']['gtf']
    resources:
        threads = 1,
        nodes = 2
    output:
        gtf = config['lr']['gtf_no_spike']
    run:
        rm_sirv_ercc_gtf(input.gtf, output.gtf)


use rule bed_to_fasta as gtf_to_t_fa with:
    input:
        bed = config['lr']['gtf_no_spike'],
        fa = config['ref']['fa']
    output:
        fa = config['lr']['t_fa']


# use rule find_orfs as td_find_orfs with:
#     input:
#         fa = config['lr']['t_fa']
#     params:
#         odir = get_odir_from_fname(config['lr']['transdecoder']['pep'])
#     output:
#         pep = config['lr']['transdecoder']['pep'],
#         gff3 = config['lr']['transdecoder']['gff3'],
#         cds = config['lr']['transdecoder']['cds'],
#         bed = config['lr']['transdecoder']['bed']

use rule orfanage_find_orfs as protein_find_orfs with:
    input:
        fa = config['ref']['fa'],
        annot_gtf = config['ref']['gtf'],
        gtf = config['lr']['gtf_no_spike'],
    output:
        gtf = config['lr']['orfanage']['cds']

use rule orfanage_filter as protein_filt_orfs with:
    input:
        cds = config['lr']['orfanage']['cds'],
    params:
        min_orf_len = config['params']['orfanage']['min_orf_len_nt'],
        scripts_path = p
    output:
        gtf_pred = config['lr']['orfanage']['cds_pred'],
        gtf = config['lr']['orfanage']['cds_filt'],

use rule rule gtf_cds_gtf_stop_codon as get_stop_codon with:
    input:
        gtf = config['lr']['orfanage']['cds_filt'],
        fa = config['ref']['fa']
    output:
        fa = config['lr']['orfanage']['cds_stop']
