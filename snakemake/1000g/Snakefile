import pandas as pd
import os
import sys

p = os.path.dirname(os.path.dirname(os.getcwd()))+'/scripts/'
sys.path.append(p)

from sm_utils import *
from utils import *
# from vcf_utils import *

c_dir = '../common/'

meta_file = '../config.tsv'
configfile: '../config.yml'

include: f'{c_dir}download.smk'
include: f'{c_dir}samtools.smk'
include: f'{c_dir}winnowmap.smk'
include: f'{c_dir}bigwig.smk'
include: f'{c_dir}variant_calling.smk'
include: f'{c_dir}formatting.smk'
include: f'{c_dir}phasing.smk'
include: f'{c_dir}cerberus.smk'
include: f'{c_dir}bedtools.smk'
include: f'{c_dir}transdecoder.smk'
include: f'{c_dir}protein.smk'
include: f'{c_dir}minimap2.smk'
include: f'{c_dir}stats.smk'
include: f'{c_dir}lr-kallisto.smk'

df = pd.read_csv(config['1000g']['meta'],
    sep='\t', comment='#', header=None)
df = df[[9,10]]
df.columns = ['cell_line_id', 'population']

pops = ['CEU', 'YRI']

rule all:
    input:
        expand(config['1000g']['hla_dpi_pop_vars'],
               population=pops)

use rule bcftools_subset_on_samples as subset_pop with:
    input:
        vcf = config['1000g']['hla_dpi_vars']
    params:
        samples = lambda wc: fmt_list_for_cli(df.loc[df.population==wc.population, 'cell_line_id'].unique())
    output:
        vcf = config['1000g']['hla_dpi_pop_vars']
